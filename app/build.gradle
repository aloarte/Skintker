plugins {
    id 'com.android.application'
    id 'kotlin-android'
    id 'kotlin-kapt'
    id 'com.google.gms.google-services'
    id 'com.google.firebase.crashlytics'
    id 'com.google.firebase.firebase-perf'
    id 'androidx.navigation.safeargs'
}

def keystorePropertiesFile = rootProject.file("keystore.properties")
def keystoreProperties = new Properties()
keystoreProperties.load(new FileInputStream(keystorePropertiesFile))

android {
    signingConfigs {
        release {
            keyAlias keystoreProperties['keyAlias']
            keyPassword keystoreProperties['keyPassword']
            storeFile file(keystoreProperties['storeFile'])
            storePassword keystoreProperties['storePassword']
        }
//        debug {
//            keyAlias keystoreProperties['keyAlias']
//            keyPassword keystoreProperties['keyPassword']
//            storeFile file(keystoreProperties['storeFile'])
//            storePassword keystoreProperties['storePassword']
//        }
    }
    compileSdk 33

    defaultConfig {
        applicationId "com.p4r4d0x.skintker"
        minSdk 26
        targetSdk 33
        versionCode 1
        versionName "1.0"
        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
    }

    buildTypes {
        debug {
            buildConfigField "String", "API_URL", '"https://skintkvault.herokuapp.com"'
            buildConfigField "String", "DATABASE_NAME", '"logs_database"'

            signingConfig signingConfigs.debug
        }
        release {
            buildConfigField "String", "API_URL", '"https://skintkvault.herokuapp.com"'
            buildConfigField "String", "DATABASE_NAME", '"logs_database"'
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
            signingConfig signingConfigs.release
        }
    }
    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }
    kotlinOptions {
        jvmTarget = '1.8'
    }
    buildFeatures {
        viewBinding true
        compose true
    }
    packagingOptions {
        resources {
            excludes += ['META-INF/atomicfu.kotlin_module']
        }
    }
    composeOptions {
        kotlinCompilerExtensionVersion '1.3.1'
    }

    testOptions {
        unitTests {
            includeAndroidResources = true
        }
    }

}

dependencies {
    implementation project(path: ':domain')
    implementation project(path: ':data')

    //Gms
    implementation "com.google.android.gms:play-services-location:$googleGmsGpsVersion"
    implementation "com.google.android.gms:play-services-auth:$googleGmsAuthVersion"

    //Room
    implementation "androidx.room:room-ktx:$roomVersion"
    kapt "androidx.room:room-compiler:$roomVersion"

    //Koin
    implementation "io.insert-koin:koin-core:$koinVersion"
    implementation "io.insert-koin:koin-android:$koinVersion"
    implementation "io.insert-koin:koin-androidx-navigation:$koinVersion"
    implementation "io.insert-koin:koin-androidx-compose:$koinVersion"

    //Architecture
    implementation "androidx.lifecycle:lifecycle-viewmodel-compose:$composeViewModel"
    implementation "org.jetbrains.kotlinx:kotlinx-coroutines-android:$coroutines"
    implementation "androidx.core:core-ktx:$coreKtxVersion"
    implementation "androidx.appcompat:appcompat:$appCompat"

    //Navigation
    implementation "androidx.navigation:navigation-fragment-ktx:$navigationVersion"
    implementation "androidx.navigation:navigation-ui-ktx:$navigationVersion"

    //Compose
    implementation "androidx.activity:activity-compose:$activityCompose"
    implementation "androidx.compose.material:material:$compose"
    implementation "androidx.compose.material:material-icons-extended:$compose"
    implementation "androidx.compose.animation:animation:$compose"
    implementation "androidx.compose.runtime:runtime-livedata:$compose"
    implementation "androidx.compose.ui:ui-tooling:$compose"
    implementation "androidx.navigation:navigation-compose:$composeNavigation"
    implementation "com.google.android.material:compose-theme-adapter:$composeTheme"
    implementation "com.google.android.material:material:$material"
    implementation "com.google.accompanist:accompanist-permissions:$accompanistPermissionsVersion"
    implementation "com.chargemap.compose:numberpicker:0.0.11"

    //Lottie
    implementation "com.airbnb.android:lottie-compose:$lottieComposeVersion"

    //Firebase
    implementation platform("com.google.firebase:firebase-bom:$firebaseVersion")
    implementation 'com.google.firebase:firebase-analytics-ktx'
    implementation 'com.google.firebase:firebase-auth'
    implementation 'com.google.firebase:firebase-crashlytics-ktx'
    implementation 'com.google.firebase:firebase-firestore-ktx'
    implementation 'com.google.firebase:firebase-perf-ktx'

    // Retrofit
    implementation "com.squareup.retrofit2:retrofit:$retrofitVersion"
    implementation "com.squareup.retrofit2:converter-gson:$retrofitGsonConverterVersion"
    implementation "com.squareup.okhttp3:logging-interceptor:$retrofitOkhttp"

    //Test
    testImplementation project(path: ':test')
    testImplementation "androidx.arch.core:core-testing:$archCoreVersion"
    testImplementation "org.jetbrains.kotlinx:kotlinx-coroutines-test:$coroutines"
    testImplementation "io.insert-koin:koin-test-junit4:$koinVersion"
    testImplementation "io.insert-koin:koin-test-junit5:$koinVersion"
    testImplementation "androidx.test:runner:$testRunnerVersion"
    testImplementation "androidx.test:core-ktx:$testCoreVersion"
    testImplementation "androidx.test.ext:junit-ktx:$testJunitKtxVersion"
    testImplementation "androidx.test:rules:$testCoreVersion"
    testImplementation "org.robolectric:robolectric:$roboelectricVersion"
    testImplementation "junit:junit:$junit"
    testImplementation "io.mockk:mockk:$mockk"

}